       Configuration 
Configuration{move = EXPAND, stateOfParsing = NORMAL_STATE, positionCurrentSymbol = 1, workingStack = [], inputStack = [program]} 
Configuration{move = EXPAND, stateOfParsing = NORMAL_STATE, positionCurrentSymbol = 1, workingStack = [program-1], inputStack = [main, (, ), {, statement, }]} 
Configuration{move = ADVANCE, stateOfParsing = NORMAL_STATE, positionCurrentSymbol = 2, workingStack = [program-1, main], inputStack = [(, ), {, statement, }]} 
Configuration{move = ADVANCE, stateOfParsing = NORMAL_STATE, positionCurrentSymbol = 3, workingStack = [program-1, main, (], inputStack = [), {, statement, }]} 
Configuration{move = ADVANCE, stateOfParsing = NORMAL_STATE, positionCurrentSymbol = 4, workingStack = [program-1, main, (, )], inputStack = [{, statement, }]} 
Configuration{move = ADVANCE, stateOfParsing = NORMAL_STATE, positionCurrentSymbol = 5, workingStack = [program-1, main, (, ), {], inputStack = [statement, }]} 
Configuration{move = EXPAND, stateOfParsing = NORMAL_STATE, positionCurrentSymbol = 5, workingStack = [program-1, main, (, ), {, statement-1], inputStack = [assignment_statement, }]} 
Configuration{move = EXPAND, stateOfParsing = NORMAL_STATE, positionCurrentSymbol = 5, workingStack = [program-1, main, (, ), {, statement-1, assignment_statement-1], inputStack = [identifier, =, expression, ;, }]} 
Configuration{move = ADVANCE, stateOfParsing = NORMAL_STATE, positionCurrentSymbol = 6, workingStack = [program-1, main, (, ), {, statement-1, assignment_statement-1, identifier], inputStack = [=, expression, ;, }]} 
Configuration{move = MOMENTARY_INSUCCESS, stateOfParsing = BACK_STATE, positionCurrentSymbol = 6, workingStack = [program-1, main, (, ), {, statement-1, assignment_statement-1, identifier], inputStack = [=, expression, ;, }]} 
Configuration{move = BACK, stateOfParsing = BACK_STATE, positionCurrentSymbol = 5, workingStack = [program-1, main, (, ), {, statement-1, assignment_statement-1], inputStack = [identifier, =, expression, ;, }]} 
Configuration{move = ANOTHER_TRY, stateOfParsing = NORMAL_STATE, positionCurrentSymbol = 5, workingStack = [program-1, main, (, ), {, statement-1, assignment_statement-2], inputStack = [identifier, =, identifier, ;, }]} 
Configuration{move = ADVANCE, stateOfParsing = NORMAL_STATE, positionCurrentSymbol = 6, workingStack = [program-1, main, (, ), {, statement-1, assignment_statement-2, identifier], inputStack = [=, identifier, ;, }]} 
Configuration{move = MOMENTARY_INSUCCESS, stateOfParsing = BACK_STATE, positionCurrentSymbol = 6, workingStack = [program-1, main, (, ), {, statement-1, assignment_statement-2, identifier], inputStack = [=, identifier, ;, }]} 
Configuration{move = BACK, stateOfParsing = BACK_STATE, positionCurrentSymbol = 5, workingStack = [program-1, main, (, ), {, statement-1, assignment_statement-2], inputStack = [identifier, =, identifier, ;, }]} 
Configuration{move = ANOTHER_TRY, stateOfParsing = BACK_STATE, positionCurrentSymbol = 5, workingStack = [program-1, main, (, ), {, statement-1], inputStack = [assignment_statement, }]} 
Configuration{move = ANOTHER_TRY, stateOfParsing = NORMAL_STATE, positionCurrentSymbol = 5, workingStack = [program-1, main, (, ), {, statement-2], inputStack = [assignment_statement, statement, }]} 
Configuration{move = EXPAND, stateOfParsing = NORMAL_STATE, positionCurrentSymbol = 5, workingStack = [program-1, main, (, ), {, statement-2, assignment_statement-1], inputStack = [identifier, =, expression, ;, statement, }]} 
Configuration{move = ADVANCE, stateOfParsing = NORMAL_STATE, positionCurrentSymbol = 6, workingStack = [program-1, main, (, ), {, statement-2, assignment_statement-1, identifier], inputStack = [=, expression, ;, statement, }]} 
Configuration{move = MOMENTARY_INSUCCESS, stateOfParsing = BACK_STATE, positionCurrentSymbol = 6, workingStack = [program-1, main, (, ), {, statement-2, assignment_statement-1, identifier], inputStack = [=, expression, ;, statement, }]} 
Configuration{move = BACK, stateOfParsing = BACK_STATE, positionCurrentSymbol = 5, workingStack = [program-1, main, (, ), {, statement-2, assignment_statement-1], inputStack = [identifier, =, expression, ;, statement, }]} 
Configuration{move = ANOTHER_TRY, stateOfParsing = NORMAL_STATE, positionCurrentSymbol = 5, workingStack = [program-1, main, (, ), {, statement-2, assignment_statement-2], inputStack = [identifier, =, identifier, ;, statement, }]} 
Configuration{move = ADVANCE, stateOfParsing = NORMAL_STATE, positionCurrentSymbol = 6, workingStack = [program-1, main, (, ), {, statement-2, assignment_statement-2, identifier], inputStack = [=, identifier, ;, statement, }]} 
Configuration{move = MOMENTARY_INSUCCESS, stateOfParsing = BACK_STATE, positionCurrentSymbol = 6, workingStack = [program-1, main, (, ), {, statement-2, assignment_statement-2, identifier], inputStack = [=, identifier, ;, statement, }]} 
Configuration{move = BACK, stateOfParsing = BACK_STATE, positionCurrentSymbol = 5, workingStack = [program-1, main, (, ), {, statement-2, assignment_statement-2], inputStack = [identifier, =, identifier, ;, statement, }]} 
Configuration{move = ANOTHER_TRY, stateOfParsing = BACK_STATE, positionCurrentSymbol = 5, workingStack = [program-1, main, (, ), {, statement-2], inputStack = [assignment_statement, statement, }]} 
Configuration{move = ANOTHER_TRY, stateOfParsing = NORMAL_STATE, positionCurrentSymbol = 5, workingStack = [program-1, main, (, ), {, statement-3], inputStack = [for_statement, }]} 
Configuration{move = EXPAND, stateOfParsing = NORMAL_STATE, positionCurrentSymbol = 5, workingStack = [program-1, main, (, ), {, statement-3, for_statement-1], inputStack = [for, identifier, in, identifier, {, statement, }, }]} 
Configuration{move = MOMENTARY_INSUCCESS, stateOfParsing = BACK_STATE, positionCurrentSymbol = 5, workingStack = [program-1, main, (, ), {, statement-3, for_statement-1], inputStack = [for, identifier, in, identifier, {, statement, }, }]} 
Configuration{move = ANOTHER_TRY, stateOfParsing = NORMAL_STATE, positionCurrentSymbol = 5, workingStack = [program-1, main, (, ), {, statement-3, for_statement-2], inputStack = [for, identifier, in, range, (, range_list, ), {, statement, }, }]} 
Configuration{move = MOMENTARY_INSUCCESS, stateOfParsing = BACK_STATE, positionCurrentSymbol = 5, workingStack = [program-1, main, (, ), {, statement-3, for_statement-2], inputStack = [for, identifier, in, range, (, range_list, ), {, statement, }, }]} 
Configuration{move = ANOTHER_TRY, stateOfParsing = BACK_STATE, positionCurrentSymbol = 5, workingStack = [program-1, main, (, ), {, statement-3], inputStack = [for_statement, }]} 
Configuration{move = ANOTHER_TRY, stateOfParsing = NORMAL_STATE, positionCurrentSymbol = 5, workingStack = [program-1, main, (, ), {, statement-4], inputStack = [declaration_statement, }]} 
Configuration{move = EXPAND, stateOfParsing = NORMAL_STATE, positionCurrentSymbol = 5, workingStack = [program-1, main, (, ), {, statement-4, declaration_statement-1], inputStack = [variable_declaration_statement, }]} 
Configuration{move = EXPAND, stateOfParsing = NORMAL_STATE, positionCurrentSymbol = 5, workingStack = [program-1, main, (, ), {, statement-4, declaration_statement-1, variable_declaration_statement-1], inputStack = [identifier_list, :, type, ;, }]} 
Configuration{move = EXPAND, stateOfParsing = NORMAL_STATE, positionCurrentSymbol = 5, workingStack = [program-1, main, (, ), {, statement-4, declaration_statement-1, variable_declaration_statement-1, identifier_list-1], inputStack = [identifier, :, type, ;, }]} 
Configuration{move = ADVANCE, stateOfParsing = NORMAL_STATE, positionCurrentSymbol = 6, workingStack = [program-1, main, (, ), {, statement-4, declaration_statement-1, variable_declaration_statement-1, identifier_list-1, identifier], inputStack = [:, type, ;, }]} 
Configuration{move = ADVANCE, stateOfParsing = NORMAL_STATE, positionCurrentSymbol = 7, workingStack = [program-1, main, (, ), {, statement-4, declaration_statement-1, variable_declaration_statement-1, identifier_list-1, identifier, :], inputStack = [type, ;, }]} 
Configuration{move = EXPAND, stateOfParsing = NORMAL_STATE, positionCurrentSymbol = 7, workingStack = [program-1, main, (, ), {, statement-4, declaration_statement-1, variable_declaration_statement-1, identifier_list-1, identifier, :, type-1], inputStack = [Integer, ;, }]} 
Configuration{move = ADVANCE, stateOfParsing = NORMAL_STATE, positionCurrentSymbol = 8, workingStack = [program-1, main, (, ), {, statement-4, declaration_statement-1, variable_declaration_statement-1, identifier_list-1, identifier, :, type-1, Integer], inputStack = [;, }]} 
Configuration{move = MOMENTARY_INSUCCESS, stateOfParsing = BACK_STATE, positionCurrentSymbol = 8, workingStack = [program-1, main, (, ), {, statement-4, declaration_statement-1, variable_declaration_statement-1, identifier_list-1, identifier, :, type-1, Integer], inputStack = [;, }]} 
Configuration{move = BACK, stateOfParsing = BACK_STATE, positionCurrentSymbol = 7, workingStack = [program-1, main, (, ), {, statement-4, declaration_statement-1, variable_declaration_statement-1, identifier_list-1, identifier, :, type-1], inputStack = [Integer, ;, }]} 
Configuration{move = ANOTHER_TRY, stateOfParsing = NORMAL_STATE, positionCurrentSymbol = 7, workingStack = [program-1, main, (, ), {, statement-4, declaration_statement-1, variable_declaration_statement-1, identifier_list-1, identifier, :, type-2], inputStack = [Char, ;, }]} 
Configuration{move = MOMENTARY_INSUCCESS, stateOfParsing = BACK_STATE, positionCurrentSymbol = 7, workingStack = [program-1, main, (, ), {, statement-4, declaration_statement-1, variable_declaration_statement-1, identifier_list-1, identifier, :, type-2], inputStack = [Char, ;, }]} 
Configuration{move = ANOTHER_TRY, stateOfParsing = NORMAL_STATE, positionCurrentSymbol = 7, workingStack = [program-1, main, (, ), {, statement-4, declaration_statement-1, variable_declaration_statement-1, identifier_list-1, identifier, :, type-3], inputStack = [String, ;, }]} 
Configuration{move = MOMENTARY_INSUCCESS, stateOfParsing = BACK_STATE, positionCurrentSymbol = 7, workingStack = [program-1, main, (, ), {, statement-4, declaration_statement-1, variable_declaration_statement-1, identifier_list-1, identifier, :, type-3], inputStack = [String, ;, }]} 
Configuration{move = ANOTHER_TRY, stateOfParsing = BACK_STATE, positionCurrentSymbol = 7, workingStack = [program-1, main, (, ), {, statement-4, declaration_statement-1, variable_declaration_statement-1, identifier_list-1, identifier, :], inputStack = [type, ;, }]} 
Configuration{move = BACK, stateOfParsing = BACK_STATE, positionCurrentSymbol = 6, workingStack = [program-1, main, (, ), {, statement-4, declaration_statement-1, variable_declaration_statement-1, identifier_list-1, identifier], inputStack = [:, type, ;, }]} 
Configuration{move = BACK, stateOfParsing = BACK_STATE, positionCurrentSymbol = 5, workingStack = [program-1, main, (, ), {, statement-4, declaration_statement-1, variable_declaration_statement-1, identifier_list-1], inputStack = [identifier, :, type, ;, }]} 
Configuration{move = ANOTHER_TRY, stateOfParsing = NORMAL_STATE, positionCurrentSymbol = 5, workingStack = [program-1, main, (, ), {, statement-4, declaration_statement-1, variable_declaration_statement-1, identifier_list-2], inputStack = [identifier, ,, identifier_list, :, type, ;, }]} 
Configuration{move = ADVANCE, stateOfParsing = NORMAL_STATE, positionCurrentSymbol = 6, workingStack = [program-1, main, (, ), {, statement-4, declaration_statement-1, variable_declaration_statement-1, identifier_list-2, identifier], inputStack = [,, identifier_list, :, type, ;, }]} 
Configuration{move = MOMENTARY_INSUCCESS, stateOfParsing = BACK_STATE, positionCurrentSymbol = 6, workingStack = [program-1, main, (, ), {, statement-4, declaration_statement-1, variable_declaration_statement-1, identifier_list-2, identifier], inputStack = [,, identifier_list, :, type, ;, }]} 
Configuration{move = BACK, stateOfParsing = BACK_STATE, positionCurrentSymbol = 5, workingStack = [program-1, main, (, ), {, statement-4, declaration_statement-1, variable_declaration_statement-1, identifier_list-2], inputStack = [identifier, ,, identifier_list, :, type, ;, }]} 
Configuration{move = ANOTHER_TRY, stateOfParsing = BACK_STATE, positionCurrentSymbol = 5, workingStack = [program-1, main, (, ), {, statement-4, declaration_statement-1, variable_declaration_statement-1], inputStack = [identifier_list, :, type, ;, }]} 
Configuration{move = ANOTHER_TRY, stateOfParsing = NORMAL_STATE, positionCurrentSymbol = 5, workingStack = [program-1, main, (, ), {, statement-4, declaration_statement-1, variable_declaration_statement-2], inputStack = [identifier_list, :, type, =, expression, ;, }]} 
Configuration{move = EXPAND, stateOfParsing = NORMAL_STATE, positionCurrentSymbol = 5, workingStack = [program-1, main, (, ), {, statement-4, declaration_statement-1, variable_declaration_statement-2, identifier_list-1], inputStack = [identifier, :, type, =, expression, ;, }]} 
Configuration{move = ADVANCE, stateOfParsing = NORMAL_STATE, positionCurrentSymbol = 6, workingStack = [program-1, main, (, ), {, statement-4, declaration_statement-1, variable_declaration_statement-2, identifier_list-1, identifier], inputStack = [:, type, =, expression, ;, }]} 
Configuration{move = ADVANCE, stateOfParsing = NORMAL_STATE, positionCurrentSymbol = 7, workingStack = [program-1, main, (, ), {, statement-4, declaration_statement-1, variable_declaration_statement-2, identifier_list-1, identifier, :], inputStack = [type, =, expression, ;, }]} 
Configuration{move = EXPAND, stateOfParsing = NORMAL_STATE, positionCurrentSymbol = 7, workingStack = [program-1, main, (, ), {, statement-4, declaration_statement-1, variable_declaration_statement-2, identifier_list-1, identifier, :, type-1], inputStack = [Integer, =, expression, ;, }]} 
Configuration{move = ADVANCE, stateOfParsing = NORMAL_STATE, positionCurrentSymbol = 8, workingStack = [program-1, main, (, ), {, statement-4, declaration_statement-1, variable_declaration_statement-2, identifier_list-1, identifier, :, type-1, Integer], inputStack = [=, expression, ;, }]} 
Configuration{move = ADVANCE, stateOfParsing = NORMAL_STATE, positionCurrentSymbol = 9, workingStack = [program-1, main, (, ), {, statement-4, declaration_statement-1, variable_declaration_statement-2, identifier_list-1, identifier, :, type-1, Integer, =], inputStack = [expression, ;, }]} 
Configuration{move = EXPAND, stateOfParsing = NORMAL_STATE, positionCurrentSymbol = 9, workingStack = [program-1, main, (, ), {, statement-4, declaration_statement-1, variable_declaration_statement-2, identifier_list-1, identifier, :, type-1, Integer, =, expression-1], inputStack = [string_expression, ;, }]} 
Configuration{move = EXPAND, stateOfParsing = NORMAL_STATE, positionCurrentSymbol = 9, workingStack = [program-1, main, (, ), {, statement-4, declaration_statement-1, variable_declaration_statement-2, identifier_list-1, identifier, :, type-1, Integer, =, expression-1, string_expression-1], inputStack = [identifier, ;, }]} 
Configuration{move = MOMENTARY_INSUCCESS, stateOfParsing = BACK_STATE, positionCurrentSymbol = 9, workingStack = [program-1, main, (, ), {, statement-4, declaration_statement-1, variable_declaration_statement-2, identifier_list-1, identifier, :, type-1, Integer, =, expression-1, string_expression-1], inputStack = [identifier, ;, }]} 
Configuration{move = ANOTHER_TRY, stateOfParsing = NORMAL_STATE, positionCurrentSymbol = 9, workingStack = [program-1, main, (, ), {, statement-4, declaration_statement-1, variable_declaration_statement-2, identifier_list-1, identifier, :, type-1, Integer, =, expression-1, string_expression-2], inputStack = [constant, ;, }]} 
Configuration{move = ADVANCE, stateOfParsing = NORMAL_STATE, positionCurrentSymbol = 10, workingStack = [program-1, main, (, ), {, statement-4, declaration_statement-1, variable_declaration_statement-2, identifier_list-1, identifier, :, type-1, Integer, =, expression-1, string_expression-2, constant], inputStack = [;, }]} 
Configuration{move = ADVANCE, stateOfParsing = NORMAL_STATE, positionCurrentSymbol = 11, workingStack = [program-1, main, (, ), {, statement-4, declaration_statement-1, variable_declaration_statement-2, identifier_list-1, identifier, :, type-1, Integer, =, expression-1, string_expression-2, constant, ;], inputStack = [}]} 
Configuration{move = ADVANCE, stateOfParsing = NORMAL_STATE, positionCurrentSymbol = 12, workingStack = [program-1, main, (, ), {, statement-4, declaration_statement-1, variable_declaration_statement-2, identifier_list-1, identifier, :, type-1, Integer, =, expression-1, string_expression-2, constant, ;, }], inputStack = []} 
Configuration{move = SUCCESS, stateOfParsing = FINAL_STATE, positionCurrentSymbol = 12, workingStack = [program-1, main, (, ), {, statement-4, declaration_statement-1, variable_declaration_statement-2, identifier_list-1, identifier, :, type-1, Integer, =, expression-1, string_expression-2, constant, ;, }], inputStack = []} 
